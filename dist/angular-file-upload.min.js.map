{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-file-upload.min.js","webpack:///webpack/bootstrap 0826f71d4e94ab51b9b3?82f4","webpack:///./src/index.js?9552","webpack:///./src/config.json?1c25","webpack:///./src/values/options.js?b00e","webpack:///./src/services/FileUploader.js?148d","webpack:///./src/services/FileLikeObject.js?b90b","webpack:///./src/services/FileItem.js?e529","webpack:///./src/services/FileDirective.js?4dd3","webpack:///./src/services/FileSelect.js?5a11","webpack:///./src/services/FileDrop.js?e446","webpack:///./src/services/FileOver.js?26c9","webpack:///./src/directives/FileSelect.js?8405","webpack:///./src/directives/FileDrop.js?82da","webpack:///./src/directives/FileOver.js?6161"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_config","_config2","_options","_options2","_FileUploader","_FileUploader2","_FileLikeObject","_FileLikeObject2","_FileItem","_FileItem2","_FileDirective","_FileDirective2","_FileSelect","_FileSelect2","_FileDrop","_FileDrop2","_FileOver","_FileOver2","_FileSelect3","_FileSelect4","_FileDrop3","_FileDrop4","_FileOver3","_FileOver4","angular","CONFIG","name","value","options","serviceFileUploader","serviceFileLikeObject","serviceFileItem","serviceFileDirective","serviceFileSelect","serviceFileDrop","serviceFileOver","directive","directiveFileSelect","directiveFileDrop","directiveFileOver","run","FileUploader","FileLikeObject","FileItem","FileDirective","FileSelect","FileDrop","FileOver","Object","defineProperty","url","alias","headers","queue","progress","autoUpload","removeAfterUpload","method","filters","formData","queueLimit","Number","MAX_VALUE","withCredentials","disableMultipart","_classCallCheck","instance","Constructor","TypeError","__identity","fileUploaderOptions","$rootScope","$http","$window","$timeout","File","FormData","settings","copy","extend","isUploading","_nextIndex","_failFilterIndex","_directives","select","drop","over","unshift","fn","_queueLimitFilter","_folderFilter","prototype","addToQueue","files","_this","list","isArrayLikeObject","arrayOfFilters","_getFilters","count","length","addedFileItems","forEach","some","temp","_isValidFile","fileItem","push","_onAfterAddingFile","filter","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","removeFromQueue","index","getIndexOfItem","item","cancel","splice","_destroy","clearQueue","remove","clearQueueAll","uploadItem","transport","isHTML5","_prepareToUploading","_onBeforeUploadItem","isCancel","cancelItem","_this2","prop","abort","dummy","undefined","onNextTick","_onCancelItem","apply","concat","_onCompleteItem","items","getNotUploadedItems","upload","cancelAll","isFile","constructor","isFileLikeObject","isNumber","indexOf","isUploaded","getReadyItems","isReady","sort","item1","item2","destroy","_this3","key","object","onAfterAddingAll","fileItems","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","response","status","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","notUploaded","uploaded","ratio","current","Math","round","isArray","names","match","$$phase","$apply","size","type","file","_this4","every","_isSuccessCode","_transformResponse","headersGetter","_headersGetter","defaults","transformResponse","transformFn","_parseHeaders","val","i","parsed","split","line","slice","trim","toLowerCase","parsedHeaders","_xhrTransport","sendable","_this5","xhr","_xhr","XMLHttpRequest","_file","append","onprogress","event","lengthComputable","total","_onProgressItem","onload","getAllResponseHeaders","gist","onerror","_onErrorItem","onabort","open","setRequestHeader","send","_iframeTransport","_this6","form","element","iframe","Date","now","input","_input","_form","replaceWith","element_","action","target","enctype","encoding","bind","html","contentDocument","body","innerHTML","e","_onSuccessItem","unbind","after","submit","_onBeforeUpload","_onProgress","_onSuccess","_onError","_onCancel","_onComplete","nextItem","isDefined","isObject","inherit","source","create","super_","_angular","$inject","fileOrInput","isInput","isElement","fakePathOrObject","postfix","isString","_createFromFakePath","path","lastModifiedDate","lastIndexOf","_createFromObject","$compile","uploader","isSuccess","isError","_replaceNode","onBeforeUpload","onProgress","onSuccess","onError","onCancel","onComplete","clone","scope","css","_saveLinks","events","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","enumerable","writable","configurable","setPrototypeOf","__proto__","extendedOptions","$destroy","change","removeAttr","getOptions","getFilters","isEmptyAfterSelection","onChange","dragover","dragleave","onDrop","transfer","_getTransfer","_preventAndStop","_removeOverClass","onDragOver","_haveFiles","types","dropEffect","_addOverClass","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","addOverClass","removeOverClass","overClass","addClass","getOverClass","removeClass","$parse","link","attributes","$eval"],"mappings":"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","file":"angular-file-upload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _options = __webpack_require__(2);\n\t\n\tvar _options2 = _interopRequireDefault(_options);\n\t\n\tvar _FileUploader = __webpack_require__(3);\n\t\n\tvar _FileUploader2 = _interopRequireDefault(_FileUploader);\n\t\n\tvar _FileLikeObject = __webpack_require__(4);\n\t\n\tvar _FileLikeObject2 = _interopRequireDefault(_FileLikeObject);\n\t\n\tvar _FileItem = __webpack_require__(5);\n\t\n\tvar _FileItem2 = _interopRequireDefault(_FileItem);\n\t\n\tvar _FileDirective = __webpack_require__(6);\n\t\n\tvar _FileDirective2 = _interopRequireDefault(_FileDirective);\n\t\n\tvar _FileSelect = __webpack_require__(7);\n\t\n\tvar _FileSelect2 = _interopRequireDefault(_FileSelect);\n\t\n\tvar _FileDrop = __webpack_require__(8);\n\t\n\tvar _FileDrop2 = _interopRequireDefault(_FileDrop);\n\t\n\tvar _FileOver = __webpack_require__(9);\n\t\n\tvar _FileOver2 = _interopRequireDefault(_FileOver);\n\t\n\tvar _FileSelect3 = __webpack_require__(10);\n\t\n\tvar _FileSelect4 = _interopRequireDefault(_FileSelect3);\n\t\n\tvar _FileDrop3 = __webpack_require__(11);\n\t\n\tvar _FileDrop4 = _interopRequireDefault(_FileDrop3);\n\t\n\tvar _FileOver3 = __webpack_require__(12);\n\t\n\tvar _FileOver4 = _interopRequireDefault(_FileOver3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tangular.module(_config2.default.name, []).value('fileUploaderOptions', _options2.default).factory('FileUploader', _FileUploader2.default).factory('FileLikeObject', _FileLikeObject2.default).factory('FileItem', _FileItem2.default).factory('FileDirective', _FileDirective2.default).factory('FileSelect', _FileSelect2.default).factory('FileDrop', _FileDrop2.default).factory('FileOver', _FileOver2.default).directive('nvFileSelect', _FileSelect4.default).directive('nvFileDrop', _FileDrop4.default).directive('nvFileOver', _FileOver4.default).run(['FileUploader', 'FileLikeObject', 'FileItem', 'FileDirective', 'FileSelect', 'FileDrop', 'FileOver', function (FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n\t    // only for compatibility\n\t    FileUploader.FileLikeObject = FileLikeObject;\n\t    FileUploader.FileItem = FileItem;\n\t    FileUploader.FileDirective = FileDirective;\n\t    FileUploader.FileSelect = FileSelect;\n\t    FileUploader.FileDrop = FileDrop;\n\t    FileUploader.FileOver = FileOver;\n\t}]);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"name\":\"angularFileUpload\"}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    url: '/',\n\t    alias: 'file',\n\t    headers: {},\n\t    queue: [],\n\t    progress: 0,\n\t    autoUpload: false,\n\t    removeAfterUpload: false,\n\t    method: 'POST',\n\t    filters: [],\n\t    formData: [],\n\t    queueLimit: Number.MAX_VALUE,\n\t    withCredentials: false,\n\t    disableMultipart: false\n\t};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    copy = _angular.copy,\n\t    extend = _angular.extend,\n\t    forEach = _angular.forEach,\n\t    isObject = _angular.isObject,\n\t    isNumber = _angular.isNumber,\n\t    isDefined = _angular.isDefined,\n\t    isArray = _angular.isArray,\n\t    element = _angular.element;\n\tfunction __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem) {\n\t    var File = $window.File,\n\t        FormData = $window.FormData;\n\t\n\t    var FileUploader = function () {\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Creates an instance of FileUploader\n\t         * @param {Object} [options]\n\t         * @constructor\n\t         */\n\t        function FileUploader(options) {\n\t            _classCallCheck(this, FileUploader);\n\t\n\t            var settings = copy(fileUploaderOptions);\n\t\n\t            extend(this, settings, options, {\n\t                isUploading: false,\n\t                _nextIndex: 0,\n\t                _failFilterIndex: -1,\n\t                _directives: { select: [], drop: [], over: [] }\n\t            });\n\t\n\t            // add default filters\n\t            this.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\t            this.filters.unshift({ name: 'folder', fn: this._folderFilter });\n\t        }\n\t        /**\n\t         * Adds items to the queue\n\t         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n\t         * @param {Object} [options]\n\t         * @param {Array<Function>|String} filters\n\t         */\n\t\n\t\n\t        FileUploader.prototype.addToQueue = function addToQueue(files, options, filters) {\n\t            var _this = this;\n\t\n\t            var list = this.isArrayLikeObject(files) ? files : [files];\n\t            var arrayOfFilters = this._getFilters(filters);\n\t            var count = this.queue.length;\n\t            var addedFileItems = [];\n\t\n\t            forEach(list, function (some /*{File|HTMLInputElement|Object}*/) {\n\t                var temp = new FileLikeObject(some);\n\t\n\t                if (_this._isValidFile(temp, arrayOfFilters, options)) {\n\t                    var fileItem = new FileItem(_this, some, options);\n\t                    addedFileItems.push(fileItem);\n\t                    _this.queue.push(fileItem);\n\t                    _this._onAfterAddingFile(fileItem);\n\t                } else {\n\t                    var filter = arrayOfFilters[_this._failFilterIndex];\n\t                    _this._onWhenAddingFileFailed(temp, filter, options);\n\t                }\n\t            });\n\t\n\t            if (this.queue.length !== count) {\n\t                this._onAfterAddingAll(addedFileItems);\n\t                this.progress = this._getTotalProgress();\n\t            }\n\t\n\t            this._render();\n\t            if (this.autoUpload) this.uploadAll();\n\t        };\n\t        /**\n\t         * Remove items from the queue. Remove last: index = -1\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.removeFromQueue = function removeFromQueue(value) {\n\t            if (this.queue.length) {\n\t                var index = this.getIndexOfItem(value);\n\t                var item = this.queue[index];\n\t                if (item.isUploading) item.cancel();\n\t                this.queue.splice(index, 1);\n\t                item._destroy();\n\t                this.progress = this._getTotalProgress();\n\t            }\n\t        };\n\t        /**\n\t         * Clears the queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.clearQueue = function clearQueue() {\n\t            while (this.queue.length) {\n\t                this.queue[0].remove();\n\t            }\n\t            this.progress = 0;\n\t        };\n\t\n\t        FileUploader.prototype.clearQueueAll = function clearQueueAll() {\n\t            this.queue = [];\n\t        };\n\t        /**\n\t         * Uploads a item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadItem = function uploadItem(value) {\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\t\n\t            item._prepareToUploading();\n\t            if (this.isUploading) return;\n\t\n\t            this._onBeforeUploadItem(item);\n\t            if (item.isCancel) return;\n\t\n\t            item.isUploading = true;\n\t            this.isUploading = true;\n\t            this[transport](item);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Cancels uploading of item from the queue\n\t         * @param {FileItem|Number} value\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelItem = function cancelItem(value) {\n\t            var _this2 = this;\n\t\n\t            var index = this.getIndexOfItem(value);\n\t            var item = this.queue[index];\n\t            var prop = this.isHTML5 ? '_xhr' : '_form';\n\t            if (!item) return;\n\t            item.isCancel = true;\n\t            if (item.isUploading) {\n\t                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n\t                item[prop].abort();\n\t            } else {\n\t                var dummy = [undefined, 0, {}];\n\t                var onNextTick = function onNextTick() {\n\t                    _this2._onCancelItem.apply(_this2, [item].concat(dummy));\n\t                    _this2._onCompleteItem.apply(_this2, [item].concat(dummy));\n\t                };\n\t                $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n\t            }\n\t        };\n\t        /**\n\t         * Uploads all not uploaded items of queue\n\t         */\n\t\n\t\n\t        FileUploader.prototype.uploadAll = function uploadAll() {\n\t            var items = this.getNotUploadedItems().filter(function (item) {\n\t                return !item.isUploading;\n\t            });\n\t            if (!items.length) return;\n\t\n\t            forEach(items, function (item) {\n\t                return item._prepareToUploading();\n\t            });\n\t            items[0].upload();\n\t        };\n\t        /**\n\t         * Cancels all uploads\n\t         */\n\t\n\t\n\t        FileUploader.prototype.cancelAll = function cancelAll() {\n\t            var items = this.getNotUploadedItems();\n\t            forEach(items, function (item) {\n\t                return item.cancel();\n\t            });\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFile = function isFile(value) {\n\t            return this.constructor.isFile(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isFileLikeObject = function isFileLikeObject(value) {\n\t            return this.constructor.isFileLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return this.constructor.isArrayLikeObject(value);\n\t        };\n\t        /**\n\t         * Returns a index of item from the queue\n\t         * @param {Item|Number} value\n\t         * @returns {Number}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getIndexOfItem = function getIndexOfItem(value) {\n\t            return isNumber(value) ? value : this.queue.indexOf(value);\n\t        };\n\t        /**\n\t         * Returns not uploaded items\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getNotUploadedItems = function getNotUploadedItems() {\n\t            return this.queue.filter(function (item) {\n\t                return !item.isUploaded;\n\t            });\n\t        };\n\t        /**\n\t         * Returns items ready for upload\n\t         * @returns {Array}\n\t         */\n\t\n\t\n\t        FileUploader.prototype.getReadyItems = function getReadyItems() {\n\t            return this.queue.filter(function (item) {\n\t                return item.isReady && !item.isUploading;\n\t            }).sort(function (item1, item2) {\n\t                return item1.index - item2.index;\n\t            });\n\t        };\n\t        /**\n\t         * Destroys instance of FileUploader\n\t         */\n\t\n\t\n\t        FileUploader.prototype.destroy = function destroy() {\n\t            var _this3 = this;\n\t\n\t            forEach(this._directives, function (key) {\n\t                forEach(_this3._directives[key], function (object) {\n\t                    object.destroy();\n\t                });\n\t            });\n\t        };\n\t        /**\n\t         * Callback\n\t         * @param {Array} fileItems\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingAll = function onAfterAddingAll(fileItems) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onAfterAddingFile = function onAfterAddingFile(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onWhenAddingFileFailed = function onWhenAddingFileFailed(item, filter, options) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onBeforeUploadItem = function onBeforeUploadItem(fileItem) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} fileItem\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressItem = function onProgressItem(fileItem, progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onProgressAll = function onProgressAll(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onSuccessItem = function onSuccessItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onErrorItem = function onErrorItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCancelItem = function onCancelItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteItem = function onCompleteItem(item, response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileUploader.prototype.onCompleteAll = function onCompleteAll() {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Returns the total progress\n\t         * @param {Number} [value]\n\t         * @returns {Number}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getTotalProgress = function _getTotalProgress(value) {\n\t            if (this.removeAfterUpload) return value || 0;\n\t\n\t            var notUploaded = this.getNotUploadedItems().length;\n\t            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t            var ratio = 100 / this.queue.length;\n\t            var current = (value || 0) * ratio / 100;\n\t\n\t            return Math.round(uploaded * ratio + current);\n\t        };\n\t        /**\n\t         * Returns array of filters\n\t         * @param {Array<Function>|String} filters\n\t         * @returns {Array<Function>}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._getFilters = function _getFilters(filters) {\n\t            if (!filters) return this.filters;\n\t            if (isArray(filters)) return filters;\n\t            var names = filters.match(/[^\\s,]+/g);\n\t            return this.filters.filter(function (filter) {\n\t                return names.indexOf(filter.name) !== -1;\n\t            });\n\t        };\n\t        /**\n\t         * Updates html\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._render = function _render() {\n\t            if (!$rootScope.$$phase) $rootScope.$apply();\n\t        };\n\t        /**\n\t         * Returns \"true\" if item is a file (not folder)\n\t         * @param {File|FileLikeObject} item\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._folderFilter = function _folderFilter(item) {\n\t            return !!(item.size || item.type);\n\t        };\n\t        /**\n\t         * Returns \"true\" if the limit has not been reached\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._queueLimitFilter = function _queueLimitFilter() {\n\t            return this.queue.length < this.queueLimit;\n\t        };\n\t        /**\n\t         * Returns \"true\" if file pass all filters\n\t         * @param {File|Object} file\n\t         * @param {Array<Function>} filters\n\t         * @param {Object} options\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._isValidFile = function _isValidFile(file, filters, options) {\n\t            var _this4 = this;\n\t\n\t            this._failFilterIndex = -1;\n\t            return !filters.length ? true : filters.every(function (filter) {\n\t                _this4._failFilterIndex++;\n\t                return filter.fn.call(_this4, file, options);\n\t            });\n\t        };\n\t        /**\n\t         * Checks whether upload successful\n\t         * @param {Number} status\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._isSuccessCode = function _isSuccessCode(status) {\n\t            return status >= 200 && status < 300 || status === 304;\n\t        };\n\t        /**\n\t         * Transforms the server response\n\t         * @param {*} response\n\t         * @param {Object} headers\n\t         * @returns {*}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._transformResponse = function _transformResponse(response, headers) {\n\t            var headersGetter = this._headersGetter(headers);\n\t            forEach($http.defaults.transformResponse, function (transformFn) {\n\t                response = transformFn(response, headersGetter);\n\t            });\n\t            return response;\n\t        };\n\t        /**\n\t         * Parsed response headers\n\t         * @param headers\n\t         * @returns {Object}\n\t         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._parseHeaders = function _parseHeaders(headers) {\n\t            var parsed = {},\n\t                key,\n\t                val,\n\t                i;\n\t\n\t            if (!headers) return parsed;\n\t\n\t            forEach(headers.split('\\n'), function (line) {\n\t                i = line.indexOf(':');\n\t                key = line.slice(0, i).trim().toLowerCase();\n\t                val = line.slice(i + 1).trim();\n\t\n\t                if (key) {\n\t                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t                }\n\t            });\n\t\n\t            return parsed;\n\t        };\n\t        /**\n\t         * Returns function that returns headers\n\t         * @param {Object} parsedHeaders\n\t         * @returns {Function}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._headersGetter = function _headersGetter(parsedHeaders) {\n\t            return function (name) {\n\t                if (name) {\n\t                    return parsedHeaders[name.toLowerCase()] || null;\n\t                }\n\t                return parsedHeaders;\n\t            };\n\t        };\n\t        /**\n\t         * The XMLHttpRequest transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._xhrTransport = function _xhrTransport(item) {\n\t            var _this5 = this;\n\t\n\t            var xhr = item._xhr = new XMLHttpRequest();\n\t            var sendable;\n\t\n\t            if (!item.disableMultipart) {\n\t                sendable = new FormData();\n\t                forEach(item.formData, function (obj) {\n\t                    forEach(obj, function (value, key) {\n\t                        sendable.append(key, value);\n\t                    });\n\t                });\n\t\n\t                sendable.append(item.alias, item._file, item.file.name);\n\t            } else {\n\t                sendable = item._file;\n\t            }\n\t\n\t            if (typeof item._file.size != 'number') {\n\t                throw new TypeError('The file specified is no longer valid');\n\t            }\n\t\n\t            xhr.upload.onprogress = function (event) {\n\t                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t                _this5._onProgressItem(item, progress);\n\t            };\n\t\n\t            xhr.onload = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                var gist = _this5._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n\t                var method = '_on' + gist + 'Item';\n\t                _this5[method](item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onerror = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onErrorItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.onabort = function () {\n\t                var headers = _this5._parseHeaders(xhr.getAllResponseHeaders());\n\t                var response = _this5._transformResponse(xhr.response, headers);\n\t                _this5._onCancelItem(item, response, xhr.status, headers);\n\t                _this5._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            xhr.open(item.method, item.url, true);\n\t\n\t            xhr.withCredentials = item.withCredentials;\n\t\n\t            forEach(item.headers, function (value, name) {\n\t                xhr.setRequestHeader(name, value);\n\t            });\n\t\n\t            xhr.send(sendable);\n\t        };\n\t        /**\n\t         * The IFrame transport\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._iframeTransport = function _iframeTransport(item) {\n\t            var _this6 = this;\n\t\n\t            var form = element('<form style=\"display: none;\" />');\n\t            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n\t            var input = item._input;\n\t\n\t            if (item._form) item._form.replaceWith(input); // remove old form\n\t            item._form = form; // save link to new form\n\t\n\t            input.prop('name', item.alias);\n\t\n\t            forEach(item.formData, function (obj) {\n\t                forEach(obj, function (value, key) {\n\t                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n\t                    element_.val(value);\n\t                    form.append(element_);\n\t                });\n\t            });\n\t\n\t            form.prop({\n\t                action: item.url,\n\t                method: 'POST',\n\t                target: iframe.prop('name'),\n\t                enctype: 'multipart/form-data',\n\t                encoding: 'multipart/form-data' // old IE\n\t            });\n\t\n\t            iframe.bind('load', function () {\n\t                var html = '';\n\t                var status = 200;\n\t\n\t                try {\n\t                    // Fix for legacy IE browsers that loads internal error page\n\t                    // when failed WS response received. In consequence iframe\n\t                    // content access denied error is thrown becouse trying to\n\t                    // access cross domain page. When such thing occurs notifying\n\t                    // with empty response object. See more info at:\n\t                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n\t                    // Note that if non standard 4xx or 5xx error code returned\n\t                    // from WS then response content can be accessed without error\n\t                    // but 'XHR' status becomes 200. In order to avoid confusion\n\t                    // returning response via same 'success' event handler.\n\t\n\t                    // fixed angular.contents() for iframes\n\t                    html = iframe[0].contentDocument.body.innerHTML;\n\t                } catch (e) {\n\t                    // in case we run into the access-is-denied error or we have another error on the server side\n\t                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n\t                    status = 500;\n\t                }\n\t\n\t                var xhr = { response: html, status: status, dummy: true };\n\t                var headers = {};\n\t                var response = _this6._transformResponse(xhr.response, headers);\n\t\n\t                _this6._onSuccessItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            });\n\t\n\t            form.abort = function () {\n\t                var xhr = { status: 0, dummy: true };\n\t                var headers = {};\n\t                var response;\n\t\n\t                iframe.unbind('load').prop('src', 'javascript:false;');\n\t                form.replaceWith(input);\n\t\n\t                _this6._onCancelItem(item, response, xhr.status, headers);\n\t                _this6._onCompleteItem(item, response, xhr.status, headers);\n\t            };\n\t\n\t            input.after(form);\n\t            form.append(input).append(iframe);\n\t\n\t            form[0].submit();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {File|Object} item\n\t         * @param {Object} filter\n\t         * @param {Object} options\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onWhenAddingFileFailed = function _onWhenAddingFileFailed(item, filter, options) {\n\t            this.onWhenAddingFileFailed(item, filter, options);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingFile = function _onAfterAddingFile(item) {\n\t            this.onAfterAddingFile(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Array<FileItem>} items\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onAfterAddingAll = function _onAfterAddingAll(items) {\n\t            this.onAfterAddingAll(items);\n\t        };\n\t        /**\n\t         *  Inner callback\n\t         * @param {FileItem} item\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onBeforeUploadItem = function _onBeforeUploadItem(item) {\n\t            item._onBeforeUpload();\n\t            this.onBeforeUploadItem(item);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onProgressItem = function _onProgressItem(item, progress) {\n\t            var total = this._getTotalProgress(progress);\n\t            this.progress = total;\n\t            item._onProgress(progress);\n\t            this.onProgressItem(item, progress);\n\t            this.onProgressAll(total);\n\t            this._render();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onSuccessItem = function _onSuccessItem(item, response, status, headers) {\n\t            item._onSuccess(response, status, headers);\n\t            this.onSuccessItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onErrorItem = function _onErrorItem(item, response, status, headers) {\n\t            item._onError(response, status, headers);\n\t            this.onErrorItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCancelItem = function _onCancelItem(item, response, status, headers) {\n\t            item._onCancel(response, status, headers);\n\t            this.onCancelItem(item, response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {FileItem} item\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.prototype._onCompleteItem = function _onCompleteItem(item, response, status, headers) {\n\t            item._onComplete(response, status, headers);\n\t            this.onCompleteItem(item, response, status, headers);\n\t\n\t            var nextItem = this.getReadyItems()[0];\n\t            this.isUploading = false;\n\t\n\t            if (isDefined(nextItem)) {\n\t                nextItem.upload();\n\t                return;\n\t            }\n\t\n\t            this.onCompleteAll();\n\t            this.progress = this._getTotalProgress();\n\t            this._render();\n\t        };\n\t        /**********************\n\t         * STATIC\n\t         **********************/\n\t        /**\n\t         * Returns \"true\" if value an instance of File\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFile = function isFile(value) {\n\t            return File && value instanceof File;\n\t        };\n\t        /**\n\t         * Returns \"true\" if value an instance of FileLikeObject\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         * @private\n\t         */\n\t\n\t\n\t        FileUploader.isFileLikeObject = function isFileLikeObject(value) {\n\t            return value instanceof FileLikeObject;\n\t        };\n\t        /**\n\t         * Returns \"true\" if value is array like object\n\t         * @param {*} value\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileUploader.isArrayLikeObject = function isArrayLikeObject(value) {\n\t            return isObject(value) && 'length' in value;\n\t        };\n\t        /**\n\t         * Inherits a target (Class_1) by a source (Class_2)\n\t         * @param {Function} target\n\t         * @param {Function} source\n\t         */\n\t\n\t\n\t        FileUploader.inherit = function inherit(target, source) {\n\t            target.prototype = Object.create(source.prototype);\n\t            target.prototype.constructor = target;\n\t            target.super_ = source;\n\t        };\n\t\n\t        return FileUploader;\n\t    }();\n\t\n\t    /**********************\n\t     * PUBLIC\n\t     **********************/\n\t    /**\n\t     * Checks a support the html5 uploader\n\t     * @returns {Boolean}\n\t     * @readonly\n\t     */\n\t\n\t\n\t    FileUploader.prototype.isHTML5 = !!(File && FormData);\n\t    /**********************\n\t     * STATIC\n\t     **********************/\n\t    /**\n\t     * @borrows FileUploader.prototype.isHTML5\n\t     */\n\t    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\t\n\t    return FileUploader;\n\t}\n\t\n\t__identity.$inject = ['fileUploaderOptions', '$rootScope', '$http', '$window', '$timeout', 'FileLikeObject', 'FileItem'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    copy = _angular.copy,\n\t    isElement = _angular.isElement,\n\t    isString = _angular.isString;\n\tfunction __identity() {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileLikeObject\n\t         * @param {File|HTMLInputElement|Object} fileOrInput\n\t         * @constructor\n\t         */\n\t        function FileLikeObject(fileOrInput) {\n\t            _classCallCheck(this, FileLikeObject);\n\t\n\t            var isInput = isElement(fileOrInput);\n\t            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n\t            var method = '_createFrom' + postfix;\n\t            this[method](fakePathOrObject);\n\t        }\n\t        /**\n\t         * Creates file like object from fake path string\n\t         * @param {String} path\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromFakePath = function _createFromFakePath(path) {\n\t            this.lastModifiedDate = null;\n\t            this.size = null;\n\t            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n\t            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n\t        };\n\t        /**\n\t         * Creates file like object from object\n\t         * @param {File|FileLikeObject} object\n\t         * @private\n\t         */\n\t\n\t\n\t        FileLikeObject.prototype._createFromObject = function _createFromObject(object) {\n\t            this.lastModifiedDate = copy(object.lastModifiedDate);\n\t            this.size = object.size;\n\t            this.type = object.type;\n\t            this.name = object.name;\n\t        };\n\t\n\t        return FileLikeObject;\n\t    }();\n\t}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    copy = _angular.copy,\n\t    extend = _angular.extend,\n\t    element = _angular.element,\n\t    isElement = _angular.isElement;\n\tfunction __identity($compile, FileLikeObject) {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileItem\n\t         * @param {FileUploader} uploader\n\t         * @param {File|HTMLInputElement|Object} some\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileItem(uploader, some, options) {\n\t            _classCallCheck(this, FileItem);\n\t\n\t            var isInput = isElement(some);\n\t            var input = isInput ? element(some) : null;\n\t            var file = !isInput ? some : null;\n\t\n\t            extend(this, {\n\t                url: uploader.url,\n\t                alias: uploader.alias,\n\t                headers: copy(uploader.headers),\n\t                formData: copy(uploader.formData),\n\t                removeAfterUpload: uploader.removeAfterUpload,\n\t                withCredentials: uploader.withCredentials,\n\t                disableMultipart: uploader.disableMultipart,\n\t                method: uploader.method\n\t            }, options, {\n\t                uploader: uploader,\n\t                file: new FileLikeObject(some),\n\t                isReady: false,\n\t                isUploading: false,\n\t                isUploaded: false,\n\t                isSuccess: false,\n\t                isCancel: false,\n\t                isError: false,\n\t                progress: 0,\n\t                index: null,\n\t                _file: file,\n\t                _input: input\n\t            });\n\t\n\t            if (input) this._replaceNode(input);\n\t        }\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Uploads a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.upload = function upload() {\n\t            try {\n\t                this.uploader.uploadItem(this);\n\t            } catch (e) {\n\t                this.uploader._onCompleteItem(this, '', 0, []);\n\t                this.uploader._onErrorItem(this, '', 0, []);\n\t            }\n\t        };\n\t        /**\n\t         * Cancels uploading of FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.cancel = function cancel() {\n\t            this.uploader.cancelItem(this);\n\t        };\n\t        /**\n\t         * Removes a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype.remove = function remove() {\n\t            this.uploader.removeFromQueue(this);\n\t        };\n\t        /**\n\t         * Callback\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onBeforeUpload = function onBeforeUpload() {};\n\t        /**\n\t         * Callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype.onProgress = function onProgress(progress) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onSuccess = function onSuccess(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onError = function onError(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onCancel = function onCancel(response, status, headers) {};\n\t        /**\n\t         * Callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         */\n\t\n\t\n\t        FileItem.prototype.onComplete = function onComplete(response, status, headers) {};\n\t        /**********************\n\t         * PRIVATE\n\t         **********************/\n\t        /**\n\t         * Inner callback\n\t         */\n\t\n\t\n\t        FileItem.prototype._onBeforeUpload = function _onBeforeUpload() {\n\t            this.isReady = true;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.onBeforeUpload();\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {Number} progress\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onProgress = function _onProgress(progress) {\n\t            this.progress = progress;\n\t            this.onProgress(progress);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onSuccess = function _onSuccess(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = true;\n\t            this.isCancel = false;\n\t            this.isError = false;\n\t            this.progress = 100;\n\t            this.index = null;\n\t            this.onSuccess(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onError = function _onError(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = true;\n\t            this.isSuccess = false;\n\t            this.isCancel = false;\n\t            this.isError = true;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onError(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onCancel = function _onCancel(response, status, headers) {\n\t            this.isReady = false;\n\t            this.isUploading = false;\n\t            this.isUploaded = false;\n\t            this.isSuccess = false;\n\t            this.isCancel = true;\n\t            this.isError = false;\n\t            this.progress = 0;\n\t            this.index = null;\n\t            this.onCancel(response, status, headers);\n\t        };\n\t        /**\n\t         * Inner callback\n\t         * @param {*} response\n\t         * @param {Number} status\n\t         * @param {Object} headers\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._onComplete = function _onComplete(response, status, headers) {\n\t            this.onComplete(response, status, headers);\n\t            if (this.removeAfterUpload) this.remove();\n\t        };\n\t        /**\n\t         * Destroys a FileItem\n\t         */\n\t\n\t\n\t        FileItem.prototype._destroy = function _destroy() {\n\t            if (this._input) this._input.remove();\n\t            if (this._form) this._form.remove();\n\t            delete this._form;\n\t            delete this._input;\n\t        };\n\t        /**\n\t         * Prepares to uploading\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._prepareToUploading = function _prepareToUploading() {\n\t            this.index = this.index || ++this.uploader._nextIndex;\n\t            this.isReady = true;\n\t        };\n\t        /**\n\t         * Replaces input element on his clone\n\t         * @param {JQLite|jQuery} input\n\t         * @private\n\t         */\n\t\n\t\n\t        FileItem.prototype._replaceNode = function _replaceNode(input) {\n\t            var clone = $compile(input.clone())(input.scope());\n\t            clone.prop('value', null); // FF fix\n\t            input.css('display', 'none');\n\t            input.after(clone); // remove jquery dependency\n\t        };\n\t\n\t        return FileItem;\n\t    }();\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileLikeObject'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity() {\n\t    var FileDirective = function () {\n\t        /**\n\t         * Creates instance of {FileDirective} object\n\t         * @param {Object} options\n\t         * @param {Object} options.uploader\n\t         * @param {HTMLElement} options.element\n\t         * @param {Object} options.events\n\t         * @param {String} options.prop\n\t         * @constructor\n\t         */\n\t        function FileDirective(options) {\n\t            _classCallCheck(this, FileDirective);\n\t\n\t            extend(this, options);\n\t            this.uploader._directives[this.prop].push(this);\n\t            this._saveLinks();\n\t            this.bind();\n\t        }\n\t        /**\n\t         * Binds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.bind = function bind() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this.element.bind(key, this[prop]);\n\t            }\n\t        };\n\t        /**\n\t         * Unbinds events handles\n\t         */\n\t\n\t\n\t        FileDirective.prototype.unbind = function unbind() {\n\t            for (var key in this.events) {\n\t                this.element.unbind(key, this.events[key]);\n\t            }\n\t        };\n\t        /**\n\t         * Destroys directive\n\t         */\n\t\n\t\n\t        FileDirective.prototype.destroy = function destroy() {\n\t            var index = this.uploader._directives[this.prop].indexOf(this);\n\t            this.uploader._directives[this.prop].splice(index, 1);\n\t            this.unbind();\n\t            // this.element = null;\n\t        };\n\t        /**\n\t         * Saves links to functions\n\t         * @private\n\t         */\n\t\n\t\n\t        FileDirective.prototype._saveLinks = function _saveLinks() {\n\t            for (var key in this.events) {\n\t                var prop = this.events[key];\n\t                this[prop] = this[prop].bind(this);\n\t            }\n\t        };\n\t\n\t        return FileDirective;\n\t    }();\n\t\n\t    /**\n\t     * Map of events\n\t     * @type {Object}\n\t     */\n\t\n\t\n\t    FileDirective.prototype.events = {};\n\t\n\t    return FileDirective;\n\t}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity($compile, FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileSelect, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileSelect} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileSelect(options) {\n\t            _classCallCheck(this, FileSelect);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    change: 'onChange'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'select'\n\t            });\n\t\n\t            var _this = _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t\n\t            if (!_this.uploader.isHTML5) {\n\t                _this.element.removeAttr('multiple');\n\t            }\n\t            _this.element.prop('value', null); // FF fix\n\t            return _this;\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.getFilters = function getFilters() {};\n\t        /**\n\t         * If returns \"true\" then HTMLInputElement will be cleared\n\t         * @returns {Boolean}\n\t         */\n\t\n\t\n\t        FileSelect.prototype.isEmptyAfterSelection = function isEmptyAfterSelection() {\n\t            return true; //!!this.element.attr('multiple');\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileSelect.prototype.onChange = function onChange() {\n\t            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t\n\t            if (!this.uploader.isHTML5) this.destroy();\n\t            this.uploader.addToQueue(files, options, filters);\n\t            if (this.isEmptyAfterSelection()) {\n\t                this.element.prop('value', null);\n\t                this.element.replaceWith($compile(this.element.clone())(this.scope)); // IE fix\n\t            }\n\t        };\n\t\n\t        return FileSelect;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileDirective'];\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend,\n\t    forEach = _angular.forEach;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileDrop, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileDrop(options) {\n\t            _classCallCheck(this, FileDrop);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    drop: 'onDrop',\n\t                    dragover: 'onDragOver',\n\t                    dragleave: 'onDragLeave'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'drop'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getOptions = function getOptions() {};\n\t        /**\n\t         * Returns filters\n\t         * @return {Array<Function>|String|undefined}\n\t         */\n\t\n\t\n\t        FileDrop.prototype.getFilters = function getFilters() {};\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDrop = function onDrop(event) {\n\t            var transfer = this._getTransfer(event);\n\t            if (!transfer) return;\n\t            var options = this.getOptions();\n\t            var filters = this.getFilters();\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t            this.uploader.addToQueue(transfer.files, options, filters);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragOver = function onDragOver(event) {\n\t            var transfer = this._getTransfer(event);\n\t            if (!this._haveFiles(transfer.types)) return;\n\t            transfer.dropEffect = 'copy';\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._addOverClass, this);\n\t        };\n\t        /**\n\t         * Event handler\n\t         */\n\t\n\t\n\t        FileDrop.prototype.onDragLeave = function onDragLeave(event) {\n\t            if (event.currentTarget === this.element[0]) return;\n\t            this._preventAndStop(event);\n\t            forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._getTransfer = function _getTransfer(event) {\n\t            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n\t        };\n\t        /**\n\t         * Helper\n\t         */\n\t\n\t\n\t        FileDrop.prototype._preventAndStop = function _preventAndStop(event) {\n\t            event.preventDefault();\n\t            event.stopPropagation();\n\t        };\n\t        /**\n\t         * Returns \"true\" if types contains files\n\t         * @param {Object} types\n\t         */\n\t\n\t\n\t        FileDrop.prototype._haveFiles = function _haveFiles(types) {\n\t            if (!types) return false;\n\t            if (types.indexOf) {\n\t                return types.indexOf('Files') !== -1;\n\t            } else if (types.contains) {\n\t                return types.contains('Files');\n\t            } else {\n\t                return false;\n\t            }\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._addOverClass = function _addOverClass(item) {\n\t            item.addOverClass();\n\t        };\n\t        /**\n\t         * Callback\n\t         */\n\t\n\t\n\t        FileDrop.prototype._removeOverClass = function _removeOverClass(item) {\n\t            item.removeOverClass();\n\t        };\n\t\n\t        return FileDrop;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular,\n\t    extend = _angular.extend;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileOver, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t        function FileOver(options) {\n\t            _classCallCheck(this, FileOver);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'over',\n\t                // Over class\n\t                overClass: 'nv-file-over'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, _FileDirective.call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Adds over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.addOverClass = function addOverClass() {\n\t            this.element.addClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Removes over class\n\t         */\n\t\n\t\n\t        FileOver.prototype.removeOverClass = function removeOverClass() {\n\t            this.element.removeClass(this.getOverClass());\n\t        };\n\t        /**\n\t         * Returns over class\n\t         * @returns {String}\n\t         */\n\t\n\t\n\t        FileOver.prototype.getOverClass = function getOverClass() {\n\t            return this.overClass;\n\t        };\n\t\n\t        return FileOver;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileSelect) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileSelect({\n\t                uploader: uploader,\n\t                element: element,\n\t                scope: scope\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileSelect'];\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileDrop) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            if (!uploader.isHTML5) return;\n\t\n\t            var object = new FileDrop({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileDrop'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity(FileUploader, FileOver) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileOver({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOverClass = function () {\n\t                return attributes.overClass || object.overClass;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['FileUploader', 'FileOver'];\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// angular-file-upload.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0826f71d4e94ab51b9b3","'use strict';\n\n\nimport CONFIG from './config.json';\n\n\nimport options from './values/options'\n\n\nimport serviceFileUploader from './services/FileUploader';\nimport serviceFileLikeObject from './services/FileLikeObject';\nimport serviceFileItem from './services/FileItem';\nimport serviceFileDirective from './services/FileDirective';\nimport serviceFileSelect from './services/FileSelect';\nimport serviceFileDrop from './services/FileDrop';\nimport serviceFileOver from './services/FileOver';\n\n\nimport directiveFileSelect from './directives/FileSelect';\nimport directiveFileDrop from './directives/FileDrop';\nimport directiveFileOver from './directives/FileOver';\n\n\nangular\n    .module(CONFIG.name, [])\n    .value('fileUploaderOptions', options)\n    .factory('FileUploader', serviceFileUploader)\n    .factory('FileLikeObject', serviceFileLikeObject)\n    .factory('FileItem', serviceFileItem)\n    .factory('FileDirective', serviceFileDirective)\n    .factory('FileSelect', serviceFileSelect)\n    .factory('FileDrop', serviceFileDrop)\n    .factory('FileOver', serviceFileOver)\n    .directive('nvFileSelect', directiveFileSelect)\n    .directive('nvFileDrop', directiveFileDrop)\n    .directive('nvFileOver', directiveFileOver)\n    .run([\n        'FileUploader',\n        'FileLikeObject',\n        'FileItem',\n        'FileDirective',\n        'FileSelect',\n        'FileDrop',\n        'FileOver',\n        function(FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n            // only for compatibility\n            FileUploader.FileLikeObject = FileLikeObject;\n            FileUploader.FileItem = FileItem;\n            FileUploader.FileDirective = FileDirective;\n            FileUploader.FileSelect = FileSelect;\n            FileUploader.FileDrop = FileDrop;\n            FileUploader.FileOver = FileOver;\n        }\n    ]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = {\"name\":\"angularFileUpload\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/config.json\n// module id = 1\n// module chunks = 0 1","'use strict';\n\n\nexport default {\n    url: '/',\n    alias: 'file',\n    headers: {},\n    queue: [],\n    progress: 0,\n    autoUpload: false,\n    removeAfterUpload: false,\n    method: 'POST',\n    filters: [],\n    formData: [],\n    queueLimit: Number.MAX_VALUE,\n    withCredentials: false,\n    disableMultipart: false\n};\n\n\n// WEBPACK FOOTER //\n// ./src/values/options.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    forEach,\n    isObject,\n    isNumber,\n    isDefined,\n    isArray,\n    element\n    } = angular;\n\n\nexport default function __identity(fileUploaderOptions, $rootScope, $http, $window, $timeout, FileLikeObject, FileItem) {\n    \n    \n    let {\n        File,\n        FormData\n        } = $window;\n    \n    \n    class FileUploader {\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Creates an instance of FileUploader\n         * @param {Object} [options]\n         * @constructor\n         */\n        constructor(options) {\n            var settings = copy(fileUploaderOptions);\n            \n            extend(this, settings, options, {\n                isUploading: false,\n                _nextIndex: 0,\n                _failFilterIndex: -1,\n                _directives: {select: [], drop: [], over: []}\n            });\n\n            // add default filters\n            this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n            this.filters.unshift({name: 'folder', fn: this._folderFilter});\n        }\n        /**\n         * Adds items to the queue\n         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n         * @param {Object} [options]\n         * @param {Array<Function>|String} filters\n         */\n        addToQueue(files, options, filters) {\n            var list = this.isArrayLikeObject(files) ? files: [files];\n            var arrayOfFilters = this._getFilters(filters);\n            var count = this.queue.length;\n            var addedFileItems = [];\n\n            forEach(list, (some /*{File|HTMLInputElement|Object}*/) => {\n                var temp = new FileLikeObject(some);\n\n                if (this._isValidFile(temp, arrayOfFilters, options)) {\n                    var fileItem = new FileItem(this, some, options);\n                    addedFileItems.push(fileItem);\n                    this.queue.push(fileItem);\n                    this._onAfterAddingFile(fileItem);\n                } else {\n                    var filter = arrayOfFilters[this._failFilterIndex];\n                    this._onWhenAddingFileFailed(temp, filter, options);\n                }\n            });\n\n            if(this.queue.length !== count) {\n                this._onAfterAddingAll(addedFileItems);\n                this.progress = this._getTotalProgress();\n            }\n\n            this._render();\n            if (this.autoUpload) this.uploadAll();\n        }\n        /**\n         * Remove items from the queue. Remove last: index = -1\n         * @param {FileItem|Number} value\n         */\n        removeFromQueue(value) {\n            if (this.queue.length) {\n                var index = this.getIndexOfItem(value);\n                var item = this.queue[index];\n                if(item.isUploading) item.cancel();\n                this.queue.splice(index, 1);\n                item._destroy();\n                this.progress = this._getTotalProgress();\n            }\n        }\n        /**\n         * Clears the queue\n         */\n        clearQueue() {\n            while(this.queue.length) {\n                this.queue[0].remove();\n            }\n            this.progress = 0;\n        }\n        clearQueueAll() {\n            this.queue = [];\n        }\n        /**\n         * Uploads a item from the queue\n         * @param {FileItem|Number} value\n         */\n        uploadItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n            item._prepareToUploading();\n            if(this.isUploading) return;\n\n            this._onBeforeUploadItem(item);\n            if (item.isCancel) return;\n\n            item.isUploading = true;\n            this.isUploading = true;\n            this[transport](item);\n            this._render();\n        }\n        /**\n         * Cancels uploading of item from the queue\n         * @param {FileItem|Number} value\n         */\n        cancelItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var prop = this.isHTML5 ? '_xhr' : '_form';\n            if (!item) return;\n            item.isCancel = true;\n            if(item.isUploading) {\n                // It will call this._onCancelItem() & this._onCompleteItem() asynchronously\n                item[prop].abort();\n            } else {\n                let dummy = [undefined, 0, {}];\n                let onNextTick = () => {\n                    this._onCancelItem(item, ...dummy);\n                    this._onCompleteItem(item, ...dummy);\n                };\n                $timeout(onNextTick); // Trigger callbacks asynchronously (setImmediate emulation)\n            }\n        }\n        /**\n         * Uploads all not uploaded items of queue\n         */\n        uploadAll() {\n            var items = this.getNotUploadedItems().filter(item => !item.isUploading);\n            if(!items.length) return;\n\n            forEach(items, item => item._prepareToUploading());\n            items[0].upload();\n        }\n        /**\n         * Cancels all uploads\n         */\n        cancelAll() {\n            var items = this.getNotUploadedItems();\n            forEach(items, item => item.cancel());\n        }\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFile(value) {\n            return this.constructor.isFile(value);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFileLikeObject(value) {\n            return this.constructor.isFileLikeObject(value);\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArrayLikeObject(value) {\n            return this.constructor.isArrayLikeObject(value);\n        }\n        /**\n         * Returns a index of item from the queue\n         * @param {Item|Number} value\n         * @returns {Number}\n         */\n        getIndexOfItem(value) {\n            return isNumber(value) ? value : this.queue.indexOf(value);\n        }\n        /**\n         * Returns not uploaded items\n         * @returns {Array}\n         */\n        getNotUploadedItems() {\n            return this.queue.filter(item => !item.isUploaded);\n        }\n        /**\n         * Returns items ready for upload\n         * @returns {Array}\n         */\n        getReadyItems() {\n            return this.queue\n                .filter(item => (item.isReady && !item.isUploading))\n                .sort((item1, item2) => item1.index - item2.index);\n        }\n        /**\n         * Destroys instance of FileUploader\n         */\n        destroy() {\n            forEach(this._directives, (key) => {\n                forEach(this._directives[key], (object) => {\n                    object.destroy();\n                });\n            });\n        }\n        /**\n         * Callback\n         * @param {Array} fileItems\n         */\n        onAfterAddingAll(fileItems) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onAfterAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         */\n        onWhenAddingFileFailed(item, filter, options) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeUploadItem(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         * @param {Number} progress\n         */\n        onProgressItem(fileItem, progress) {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         */\n        onProgressAll(progress) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccessItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onErrorItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancelItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCompleteItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         */\n        onCompleteAll() {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Returns the total progress\n         * @param {Number} [value]\n         * @returns {Number}\n         * @private\n         */\n        _getTotalProgress(value) {\n            if(this.removeAfterUpload) return value || 0;\n\n            var notUploaded = this.getNotUploadedItems().length;\n            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n            var ratio = 100 / this.queue.length;\n            var current = (value || 0) * ratio / 100;\n\n            return Math.round(uploaded * ratio + current);\n        }\n        /**\n         * Returns array of filters\n         * @param {Array<Function>|String} filters\n         * @returns {Array<Function>}\n         * @private\n         */\n        _getFilters(filters) {\n            if(!filters) return this.filters;\n            if(isArray(filters)) return filters;\n            var names = filters.match(/[^\\s,]+/g);\n            return this.filters\n                .filter(filter => names.indexOf(filter.name) !== -1);\n        }\n        /**\n         * Updates html\n         * @private\n         */\n        _render() {\n            if(!$rootScope.$$phase) $rootScope.$apply();\n        }\n        /**\n         * Returns \"true\" if item is a file (not folder)\n         * @param {File|FileLikeObject} item\n         * @returns {Boolean}\n         * @private\n         */\n        _folderFilter(item) {\n            return !!(item.size || item.type);\n        }\n        /**\n         * Returns \"true\" if the limit has not been reached\n         * @returns {Boolean}\n         * @private\n         */\n        _queueLimitFilter() {\n            return this.queue.length < this.queueLimit;\n        }\n        /**\n         * Returns \"true\" if file pass all filters\n         * @param {File|Object} file\n         * @param {Array<Function>} filters\n         * @param {Object} options\n         * @returns {Boolean}\n         * @private\n         */\n        _isValidFile(file, filters, options) {\n            this._failFilterIndex = -1;\n            return !filters.length ? true : filters.every((filter) => {\n                this._failFilterIndex++;\n                return filter.fn.call(this, file, options);\n            });\n        }\n        /**\n         * Checks whether upload successful\n         * @param {Number} status\n         * @returns {Boolean}\n         * @private\n         */\n        _isSuccessCode(status) {\n            return (status >= 200 && status < 300) || status === 304;\n        }\n        /**\n         * Transforms the server response\n         * @param {*} response\n         * @param {Object} headers\n         * @returns {*}\n         * @private\n         */\n        _transformResponse(response, headers) {\n            var headersGetter = this._headersGetter(headers);\n            forEach($http.defaults.transformResponse, (transformFn) => {\n                response = transformFn(response, headersGetter);\n            });\n            return response;\n        }\n        /**\n         * Parsed response headers\n         * @param headers\n         * @returns {Object}\n         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n         * @private\n         */\n        _parseHeaders(headers) {\n            var parsed = {}, key, val, i;\n\n            if(!headers) return parsed;\n\n            forEach(headers.split('\\n'), (line) => {\n                i = line.indexOf(':');\n                key = line.slice(0, i).trim().toLowerCase();\n                val = line.slice(i + 1).trim();\n\n                if(key) {\n                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n                }\n            });\n\n            return parsed;\n        }\n        /**\n         * Returns function that returns headers\n         * @param {Object} parsedHeaders\n         * @returns {Function}\n         * @private\n         */\n        _headersGetter(parsedHeaders) {\n            return (name) => {\n                if(name) {\n                    return parsedHeaders[name.toLowerCase()] || null;\n                }\n                return parsedHeaders;\n            };\n        }\n        /**\n         * The XMLHttpRequest transport\n         * @param {FileItem} item\n         * @private\n         */\n        _xhrTransport(item) {\n            var xhr = item._xhr = new XMLHttpRequest();\n            var sendable;\n\n            if (!item.disableMultipart) {\n                sendable = new FormData();\n                forEach(item.formData, (obj) => {\n                    forEach(obj, (value, key) => {\n                        sendable.append(key, value);\n                    });\n                });\n\n                sendable.append(item.alias, item._file, item.file.name);\n            }\n            else {\n                sendable = item._file;\n            }\n\n            if(typeof(item._file.size) != 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n\n            xhr.upload.onprogress = (event) => {\n                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this._onProgressItem(item, progress);\n            };\n\n            xhr.onload = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                var gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n                var method = '_on' + gist + 'Item';\n                this[method](item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onerror = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onabort = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.open(item.method, item.url, true);\n\n            xhr.withCredentials = item.withCredentials;\n\n            forEach(item.headers, (value, name) => {\n                xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(sendable);\n        }\n        /**\n         * The IFrame transport\n         * @param {FileItem} item\n         * @private\n         */\n        _iframeTransport(item) {\n            var form = element('<form style=\"display: none;\" />');\n            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n            var input = item._input;\n\n            if(item._form) item._form.replaceWith(input); // remove old form\n            item._form = form; // save link to new form\n\n            input.prop('name', item.alias);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n                    element_.val(value);\n                    form.append(element_);\n                });\n            });\n\n            form.prop({\n                action: item.url,\n                method: 'POST',\n                target: iframe.prop('name'),\n                enctype: 'multipart/form-data',\n                encoding: 'multipart/form-data' // old IE\n            });\n\n            iframe.bind('load', () => {\n                var html = '';\n                var status = 200;\n\n                try {\n                    // Fix for legacy IE browsers that loads internal error page\n                    // when failed WS response received. In consequence iframe\n                    // content access denied error is thrown becouse trying to\n                    // access cross domain page. When such thing occurs notifying\n                    // with empty response object. See more info at:\n                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n                    // Note that if non standard 4xx or 5xx error code returned\n                    // from WS then response content can be accessed without error\n                    // but 'XHR' status becomes 200. In order to avoid confusion\n                    // returning response via same 'success' event handler.\n\n                    // fixed angular.contents() for iframes\n                    html = iframe[0].contentDocument.body.innerHTML;\n                } catch(e) {\n                    // in case we run into the access-is-denied error or we have another error on the server side\n                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n                    status = 500;\n                }\n\n                var xhr = {response: html, status: status, dummy: true};\n                var headers = {};\n                var response = this._transformResponse(xhr.response, headers);\n\n                this._onSuccessItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            });\n\n            form.abort = () => {\n                var xhr = {status: 0, dummy: true};\n                var headers = {};\n                var response;\n\n                iframe.unbind('load').prop('src', 'javascript:false;');\n                form.replaceWith(input);\n\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            input.after(form);\n            form.append(input).append(iframe);\n\n            form[0].submit();\n        }\n        /**\n         * Inner callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         * @private\n         */\n        _onWhenAddingFileFailed(item, filter, options) {\n            this.onWhenAddingFileFailed(item, filter, options);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         */\n        _onAfterAddingFile(item) {\n            this.onAfterAddingFile(item);\n        }\n        /**\n         * Inner callback\n         * @param {Array<FileItem>} items\n         */\n        _onAfterAddingAll(items) {\n            this.onAfterAddingAll(items);\n        }\n        /**\n         *  Inner callback\n         * @param {FileItem} item\n         * @private\n         */\n        _onBeforeUploadItem(item) {\n            item._onBeforeUpload();\n            this.onBeforeUploadItem(item);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {Number} progress\n         * @private\n         */\n        _onProgressItem(item, progress) {\n            var total = this._getTotalProgress(progress);\n            this.progress = total;\n            item._onProgress(progress);\n            this.onProgressItem(item, progress);\n            this.onProgressAll(total);\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccessItem(item, response, status, headers) {\n            item._onSuccess(response, status, headers);\n            this.onSuccessItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onErrorItem(item, response, status, headers) {\n            item._onError(response, status, headers);\n            this.onErrorItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancelItem(item, response, status, headers) {\n            item._onCancel(response, status, headers);\n            this.onCancelItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCompleteItem(item, response, status, headers) {\n            item._onComplete(response, status, headers);\n            this.onCompleteItem(item, response, status, headers);\n\n            var nextItem = this.getReadyItems()[0];\n            this.isUploading = false;\n\n            if(isDefined(nextItem)) {\n                nextItem.upload();\n                return;\n            }\n\n            this.onCompleteAll();\n            this.progress = this._getTotalProgress();\n            this._render();\n        }\n        /**********************\n         * STATIC\n         **********************/\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFile(value) {\n            return (File && value instanceof File);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFileLikeObject(value) {\n            return value instanceof FileLikeObject;\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        static isArrayLikeObject(value) {\n            return (isObject(value) && 'length' in value);\n        }\n        /**\n         * Inherits a target (Class_1) by a source (Class_2)\n         * @param {Function} target\n         * @param {Function} source\n         */\n        static inherit(target, source) {\n            target.prototype = Object.create(source.prototype);\n            target.prototype.constructor = target;\n            target.super_ = source;\n        }\n    }\n\n\n    /**********************\n     * PUBLIC\n     **********************/\n    /**\n     * Checks a support the html5 uploader\n     * @returns {Boolean}\n     * @readonly\n     */\n    FileUploader.prototype.isHTML5 = !!(File && FormData);\n    /**********************\n     * STATIC\n     **********************/\n    /**\n     * @borrows FileUploader.prototype.isHTML5\n     */\n    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\n    \n    return FileUploader;\n}\n\n\n__identity.$inject = [\n    'fileUploaderOptions', \n    '$rootScope', \n    '$http', \n    '$window',\n    '$timeout',\n    'FileLikeObject',\n    'FileItem'\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileUploader.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    isElement,\n    isString\n    } = angular;\n\n\nexport default function __identity() {\n    \n    \n    return class FileLikeObject {\n        /**\n         * Creates an instance of FileLikeObject\n         * @param {File|HTMLInputElement|Object} fileOrInput\n         * @constructor\n         */\n        constructor(fileOrInput) {\n            var isInput = isElement(fileOrInput);\n            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n            var method = '_createFrom' + postfix;\n            this[method](fakePathOrObject);\n        }\n        /**\n         * Creates file like object from fake path string\n         * @param {String} path\n         * @private\n         */\n        _createFromFakePath(path) {\n            this.lastModifiedDate = null;\n            this.size = null;\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n        }\n        /**\n         * Creates file like object from object\n         * @param {File|FileLikeObject} object\n         * @private\n         */\n        _createFromObject(object) {\n            this.lastModifiedDate = copy(object.lastModifiedDate);\n            this.size = object.size;\n            this.type = object.type;\n            this.name = object.name;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileLikeObject.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    element,\n    isElement\n    } = angular;\n\n\nexport default function __identity($compile, FileLikeObject) {\n    \n    \n    return class FileItem {\n        /**\n         * Creates an instance of FileItem\n         * @param {FileUploader} uploader\n         * @param {File|HTMLInputElement|Object} some\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(uploader, some, options) {\n            var isInput = isElement(some);\n            var input = isInput ? element(some) : null;\n            var file = !isInput ? some : null;\n\n            extend(this, {\n                url: uploader.url,\n                alias: uploader.alias,\n                headers: copy(uploader.headers),\n                formData: copy(uploader.formData),\n                removeAfterUpload: uploader.removeAfterUpload,\n                withCredentials: uploader.withCredentials,\n                disableMultipart: uploader.disableMultipart,\n                method: uploader.method\n            }, options, {\n                uploader: uploader,\n                file: new FileLikeObject(some),\n                isReady: false,\n                isUploading: false,\n                isUploaded: false,\n                isSuccess: false,\n                isCancel: false,\n                isError: false,\n                progress: 0,\n                index: null,\n                _file: file,\n                _input: input\n            });\n\n            if (input) this._replaceNode(input);\n        }\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Uploads a FileItem\n         */\n        upload() {\n            try {\n                this.uploader.uploadItem(this);\n            } catch(e) {\n                this.uploader._onCompleteItem(this, '', 0, []);\n                this.uploader._onErrorItem(this, '', 0, []);\n            }\n        }\n        /**\n         * Cancels uploading of FileItem\n         */\n        cancel() {\n            this.uploader.cancelItem(this);\n        }\n        /**\n         * Removes a FileItem\n         */\n        remove() {\n            this.uploader.removeFromQueue(this);\n        }\n        /**\n         * Callback\n         * @private\n         */\n        onBeforeUpload() {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         * @private\n         */\n        onProgress(progress) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccess(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onError(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancel(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onComplete(response, status, headers) {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Inner callback\n         */\n        _onBeforeUpload() {\n            this.isReady = true;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 0;\n            this.onBeforeUpload();\n        }\n        /**\n         * Inner callback\n         * @param {Number} progress\n         * @private\n         */\n        _onProgress(progress) {\n            this.progress = progress;\n            this.onProgress(progress);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccess(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = true;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 100;\n            this.index = null;\n            this.onSuccess(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onError(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = true;\n            this.progress = 0;\n            this.index = null;\n            this.onError(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancel(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = true;\n            this.isError = false;\n            this.progress = 0;\n            this.index = null;\n            this.onCancel(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onComplete(response, status, headers) {\n            this.onComplete(response, status, headers);\n            if(this.removeAfterUpload) this.remove();\n        }\n        /**\n         * Destroys a FileItem\n         */\n        _destroy() {\n            if(this._input) this._input.remove();\n            if(this._form) this._form.remove();\n            delete this._form;\n            delete this._input;\n        }\n        /**\n         * Prepares to uploading\n         * @private\n         */\n        _prepareToUploading() {\n            this.index = this.index || ++this.uploader._nextIndex;\n            this.isReady = true;\n        }\n        /**\n         * Replaces input element on his clone\n         * @param {JQLite|jQuery} input\n         * @private\n         */\n        _replaceNode(input) {\n            var clone = $compile(input.clone())(input.scope());\n            clone.prop('value', null); // FF fix\n            input.css('display', 'none');\n            input.after(clone); // remove jquery dependency\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileLikeObject'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileItem.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity() {\n\n\n    class FileDirective {\n        /**\n         * Creates instance of {FileDirective} object\n         * @param {Object} options\n         * @param {Object} options.uploader\n         * @param {HTMLElement} options.element\n         * @param {Object} options.events\n         * @param {String} options.prop\n         * @constructor\n         */\n        constructor(options) {\n            extend(this, options);\n            this.uploader._directives[this.prop].push(this);\n            this._saveLinks();\n            this.bind();\n        }\n        /**\n         * Binds events handles\n         */\n        bind() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this.element.bind(key, this[prop]);\n            }\n        }\n        /**\n         * Unbinds events handles\n         */\n        unbind() {\n            for(var key in this.events) {\n                this.element.unbind(key, this.events[key]);\n            }\n        }\n        /**\n         * Destroys directive\n         */\n        destroy() {\n            var index = this.uploader._directives[this.prop].indexOf(this);\n            this.uploader._directives[this.prop].splice(index, 1);\n            this.unbind();\n            // this.element = null;\n        }\n        /**\n         * Saves links to functions\n         * @private\n         */\n        _saveLinks() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this[prop] = this[prop].bind(this);\n            }\n        }\n    }\n\n\n    /**\n     * Map of events\n     * @type {Object}\n     */\n    FileDirective.prototype.events = {};\n\n\n    return FileDirective;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileDirective.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity($compile, FileDirective) {\n    \n    \n    return class FileSelect extends FileDirective {\n        /**\n         * Creates instance of {FileSelect} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    change: 'onChange'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'select'\n            });\n            \n            super(extendedOptions);\n            \n            if(!this.uploader.isHTML5) {\n                this.element.removeAttr('multiple');\n            }\n            this.element.prop('value', null); // FF fix\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * If returns \"true\" then HTMLInputElement will be cleared\n         * @returns {Boolean}\n         */\n        isEmptyAfterSelection() {\n            return true; //!!this.element.attr('multiple');\n        }\n        /**\n         * Event handler\n         */\n        onChange() {\n            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n            var options = this.getOptions();\n            var filters = this.getFilters();\n\n            if(!this.uploader.isHTML5) this.destroy();\n            this.uploader.addToQueue(files, options, filters);\n            if(this.isEmptyAfterSelection()) {\n                this.element.prop('value', null);\n                this.element.replaceWith($compile(this.element.clone())(this.scope)); // IE fix\n            }\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileDirective'\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileSelect.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend,\n    forEach\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileDrop extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    drop: 'onDrop',\n                    dragover: 'onDragOver',\n                    dragleave: 'onDragLeave'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'drop'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * Event handler\n         */\n        onDrop(event) {\n            var transfer = this._getTransfer(event);\n            if(!transfer) return;\n            var options = this.getOptions();\n            var filters = this.getFilters();\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n            this.uploader.addToQueue(transfer.files, options, filters);\n        }\n        /**\n         * Event handler\n         */\n        onDragOver(event) {\n            var transfer = this._getTransfer(event);\n            if(!this._haveFiles(transfer.types)) return;\n            transfer.dropEffect = 'copy';\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._addOverClass, this);\n        }\n        /**\n         * Event handler\n         */\n        onDragLeave(event) {\n            if(event.currentTarget === this.element[0]) return;\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n        }\n        /**\n         * Helper\n         */\n        _getTransfer(event) {\n            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n        }\n        /**\n         * Helper\n         */\n        _preventAndStop(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        /**\n         * Returns \"true\" if types contains files\n         * @param {Object} types\n         */\n        _haveFiles(types) {\n            if(!types) return false;\n            if(types.indexOf) {\n                return types.indexOf('Files') !== -1;\n            } else if(types.contains) {\n                return types.contains('Files');\n            } else {\n                return false;\n            }\n        }\n        /**\n         * Callback\n         */\n        _addOverClass(item) {\n            item.addOverClass();\n        }\n        /**\n         * Callback\n         */\n        _removeOverClass(item) {\n            item.removeOverClass();\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileDrop.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileOver extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'over',\n                // Over class\n                overClass: 'nv-file-over'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Adds over class\n         */\n        addOverClass() {\n            this.element.addClass(this.getOverClass());\n        }\n        /**\n         * Removes over class\n         */\n        removeOverClass() {\n            this.element.removeClass(this.getOverClass());\n        }\n        /**\n         * Returns over class\n         * @returns {String}\n         */\n        getOverClass() {\n            return this.overClass;\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/services/FileOver.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileSelect) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileSelect({\n                uploader: uploader,\n                element: element,\n                scope: scope\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileSelect'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileSelect.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileDrop) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            if (!uploader.isHTML5) return;\n\n            var object = new FileDrop({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileDrop'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileDrop.js","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity(FileUploader, FileOver) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileOver({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOverClass = () => attributes.overClass || object.overClass;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    'FileUploader',\n    'FileOver'\n];\n\n\n// WEBPACK FOOTER //\n// ./src/directives/FileOver.js"],"sourceRoot":""}